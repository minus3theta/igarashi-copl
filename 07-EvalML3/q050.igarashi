def $e1 = if n < 2 then 1 else n * fact (n - 1);
def $v1 = ()[rec fact = fun n -> $e1];
def $env1 = fact = $v1, n = 3;
def $env2 = fact = $v1, n = 2;
def $env3 = fact = $v1, n = 1;

|- let rec fact = fun n ->
   if n < 2 then 1 else n * fact (n - 1) in
   fact 3
  evalto 6 by E-LetRec {
  fact = $v1 |- fact 3 evalto 6 by E-AppRec {
    fact = $v1 |- fact evalto $v1 by E-Var1 {};
    fact = $v1 |- 3 evalto 3 by E-Int {};
    fact = $v1, n = 3 |- $e1 evalto 6 by E-IfF {
      $env1 |- n < 2 evalto false by E-Lt {
        $env1 |- n evalto 3 by E-Var1 {};
        $env1 |- 2 evalto 2 by E-Int {};
        3 less than 2 is false by B-Lt {}
      };
      $env1 |- n * fact (n - 1) evalto 6 by E-Times {
        $env1 |- n evalto 3 by E-Var1 {};
        $env1 |- fact (n - 1) evalto 2 by E-AppRec {
          $env1 |- fact evalto $v1 by E-Var2 {
            fact = $v1 |- fact evalto $v1 by E-Var1 {}
          };
          $env1 |- n - 1 evalto 2 by E-Minus {
            $env1 |- n evalto 3 by E-Var1 {};
            $env1 |- 1 evalto 1 by E-Int {};
            3 minus 1 is 2 by B-Minus {}
          };
          $env2 |- $e1 evalto 2 by E-IfF {
            $env2 |- n < 2 evalto false by E-Lt {
              $env2 |- n evalto 2 by E-Var1 {};
              $env2 |- 2 evalto 2 by E-Int {};
              2 less than 2 is false by B-Lt {}
            };
            $env2 |- n * fact (n - 1) evalto 2 by E-Times {
              $env2 |- n evalto 2 by E-Var1 {};
              $env2 |- fact (n - 1) evalto 1 by E-AppRec {
                $env2 |- fact evalto $v1 by E-Var2 {
                  fact = $v1 |- fact evalto $v1 by E-Var1 {}
                };
                $env2 |- n - 1 evalto 1 by E-Minus {
                  $env2 |- n evalto 2 by E-Var1 {};
                  $env2 |- 1 evalto 1 by E-Int {};
                  2 minus 1 is 1 by B-Minus {}
                };
                $env3 |- $e1 evalto 1 by E-IfT {
                  $env3 |- n < 2 evalto true by E-Lt {
                    $env3 |- n evalto 1 by E-Var1 {};
                    $env3 |- 2 evalto 2 by E-Int {};
                    1 less than 2 is true by B-Lt {}
                  };
                  $env3 |- 1 evalto 1 by E-Int {}
                }
              };
              2 times 1 is 2 by B-Times {}
            }
          }
        };
        3 times 2 is 6 by B-Times {}
      }
    }
  }
}
